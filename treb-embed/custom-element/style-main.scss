
@import 'treb-icons.scss';
@import 'treb-utilities.scss';
// @import 'toolbar.scss';
@import 'toolbar4.scss';

/*
import css1 from 'treb-grid/style/grid-layout.scss';
import css2 from 'treb-grid/style/grid.scss';
import css3 from '../style/embed.scss';
*/

@import 'treb-grid/style/grid-layout.scss';
@import 'treb-grid/style/grid.scss';
@import 'treb-embed/style/embed.scss';
@import 'treb-charts/style/charts.scss';

* {
  box-sizing: border-box;
}

:host {

  all: initial;
  // font-family: var(--treb-font-stack, sans-serif); // stack
  font-family: $font-stack;
  position: relative;
  display: block;

  /*
  display: grid;
  grid-template-columns: minmax(0, 1fr) auto;
  grid-template-rows: auto minmax(0, 1fr);
  */

  box-sizing: border-box;

  * {
    box-sizing: border-box;
  }

  // can we make these optional? [probably]
  width: 1000px;
  height: 750px;

  
}

#layout {
  width: 100%;
  height: 100%;
  position: relative;
  display: grid;
  grid-template-columns: minmax(0, 1fr) auto;
  grid-template-rows: auto minmax(0, 1fr);
}

.toolbar-container {

  grid-row: 1;
  grid-column: 1/3;

  // actual layout is in toolbar.scss


  &.animated {
    transition: height var(--treb-layout-transition, .25s ease), 
                opacity var(--treb-layout-transition, .25s ease);
  }

  // toolbar defaults to hidden, set .toolbar-visible on the host/root
  // element to show

  // height: 2rem;

  height: 0px;
  opacity: 0;

}

/*
#toolbar {
  // background: pink;
 

  grid-row: 1;
  grid-column: 1/3;

  // actual layout is in toolbar.scss


  &.animated {
    transition: height var(--treb-layout-transition, .25s ease), 
                opacity var(--treb-layout-transition, .25s ease);
  }

  // toolbar defaults to hidden, set .toolbar-visible on the host/root
  // element to show

  // height: 2rem;

  height: 0px;
  opacity: 0;
  
}
*/

#sidebar {
  // background: lightskyblue;

  padding-top: 1em;
  grid-row: 2;
  grid-column: 2;
  display: flex;
  flex-direction: column;
  gap: .75em;
  justify-content: flex-start;
  overflow: hidden;
  width: 2.5rem;
  align-items: center;

  // we use margin on the contained elements instead
  // of padding on this component so that we can set 
  // width -> 0 to hide it

  // actually we will need to use an explicit width for
  // that to work (unless we want to measure it, which
  // won't work if it starts closed)

  &.animated {
    transition: width var(--treb-sidebar-transition, .2s ease), 
                opacity var(--treb-sidebar-transition, .2s ease);
  }

  /*
  &.hidden {
    width: 0px;
    opacity: 0;
  }
  */

}

:host, .treb-root-node, #layout {
  /*
  &.toolbar-visible #toolbar {
    height: 40px;
    opacity: 1;
  }
  */

  &.toolbar-visible .toolbar-container {
    height: 60px;
    opacity: 1;
  }

}

:host, .treb-root-node, #layout {
  &.collapsed #sidebar {
    width: 0px;
    opacity: 0;
  }
}

#sidebar > button {

  padding: 0;
  margin: 0;
  border: 0;
  background: transparent;

}

#sidebar > button, #toggle-sidebar-button {

  &::after {
    display: block;
    height: 24px;
    width: 24px;
    content: '';
    background: #ccc;
    mask-position: center;
    -webkit-mask-position: center;
    mask-repeat: no-repeat;
    -webkit-mask-repeat: no-repeat;
    transition: background-color 0.1s ease;
  }

  &:hover::after {
    background: #666;
  }

}

#toggle-sidebar-button {

  position: absolute;
  right: .5rem;
  bottom: 4rem;
  background: transparent;
  border: 0;
  border: 1px solid transparent;
  height: 24px;
  width: 24px;

  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;

  z-index: 99;

  &::after {
    height: 12px;
    width: 12px;
    mask-image: var(--treb-sidebar-icon-chevron-right);
    -webkit-mask-image: var(--treb-sidebar-icon-chevron-right);
  }

}

:host.toolbar-visible {
  border: 2px solid red;
}

:host, .treb-root-node, #layout {
  &.collapsed #toggle-sidebar-button {

    border-color: #ccc;
    border-right-color: #fff;
    right: 0px;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    &::after {
      mask-image: var(--treb-sidebar-icon-chevron-left);
      -webkit-mask-image: var(--treb-sidebar-icon-chevron-left);
    }
    background: #fff;

  }
}

#spreadsheet {

  grid-row: 2;
  grid-column: 1;

  position: relative;
  display: grid;

  grid-template-rows: auto minmax(0, 1fr) auto;
  grid-template-columns: minmax(0, 1fr);

}

.treb-layout-resize-container {
  box-shadow: 0 4px 6px -4px rgba(0, 0, 0, .4);

}

#main {
  // border: 1px solid orange;
  // grid-row: 3;
  // grid-column: 1;

  // this is relative so we can place the resize handle on top
  // of the scrollbars in the contained element via absolute

  position: relative;
  box-shadow: 0 4px 6px -4px rgba(0, 0, 0, .61);

}

.treb-layout-resize-container {
  overflow: hidden;
  position: relative;
  display: flex;
}

#container {
  overflow: scroll;
  overscroll-behavior: none; // doesn't work in safari
  width: 100%;
  height: 100%;  
}

#spreadsheet-tiles {
  display: grid;
  grid-template-rows: 1fr 1fr;
  grid-template-columns: 1fr 1fr;
}

.tile {
  width: 400px;
  height: 300px;
}

#resize-handle {
  border: .5rem solid var(--treb-resize-handle-color, blue);
  border-top-color: transparent;
  border-left-color: transparent;
  position: absolute;
  bottom: 0px;
  right: 0px;
  cursor: nw-resize;

  // the opacity change is just annoying, don't bother
  /*
  opacity: .35;
  transition: opacity var(--treb-resize-transition, .1s ease-in-out);
  &:hover, &.retain-opacity {
    opacity: 1;
  }
  */

  &.disabled {
    display: none;
  }

}

.spreadsheet-header {
  &.hidden {
    display: none;    
  }
}

#spreadsheet-header {
  // background-color: aquamarine;
  // grid-row: 2;
  // grid-column: 1;
  display: flex;
  flex-direction: row;
  gap: .5em;
  padding: .5em 0;

  & > div {
    border-radius: 3px;
    border: 1px solid #ccc;
    padding: .25em;
    line-height: 1.6;
  }

}

/*
#formula-editor {
  flex-grow: 1;

  // firefox issue
  user-select: text;
  -moz-user-select: text;
}
*/

.flex-grow {
  flex-grow: 1;
}

#mask {

  // background: pink;
  // opacity: .5;

  z-index: 9999; // ugh

  position: fixed;
  top: 0px;
  left: 0px;
  width: 100vw;
  height: 100vh;
  display: none;
  pointer-events: none;

  &.visible {
    display: block;
    pointer-events: initial;
  }

}


#resize-layout {

  z-index: 9998; // ugh


  position: absolute;
  top: 0px;
  left: 0px;
  border: 1px dotted var(--treb-resize-frame-color, blue);
  width: 100%;
  height: 100%;
  display: none;

  &.visible {
    display: block;
  }

}

#dialog {
  position: absolute;
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
  border: 1px solid red;
  border-radius: 3px;
  box-shadow: 0 4px 6px -4px rgba(0, 0, 0, .61);
  background: #fff;
  padding: 1rem;
  display: none;

  &.visible {
    display: block;
  }

}

.disable-on-dialog.disabled {
  opacity: .5;
  pointer-events: none;  
}
