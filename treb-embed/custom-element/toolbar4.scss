
DO NOT INCLUDE THIS FILE


/**
 * as much as I would prefer using layout anchors for the toolbar, given
 * our particular set of requirements(*) it makes more sense to use script
 * positioning. 
 * 
 * there's no case where we would be visible without script, so it's not
 * going to break, and it just makes more sense.
 *
 * (*) scrolling horizontally, not scrolling verically, and menus breaking 
 *     out of the box. we can get 99% of the way there with anchors and 
 *     fancy css but ultimately script is the only way to get everything
 *     we want.
 */

 
// -----------------------------------------------------------------------------

$button-width: 32px;
$dropdown-button-width: 16px;

$background-color: #fff;
$background-hover: #f0f0f0;
$border-color: #ccc;

$menu-background: #fff;
$menu-border-color: #ccc;
$menu-item-hover-color: #eee;

$box-shadow: 0 4px 6px -4px rgba(0, 0, 0, .4);
$border-radius: 3px;

$font-size: 14px;
$split-font-size: 10px;

// -----------------------------------------------------------------------------


button > svg { pointer-events: none; }

/** 
 * the root node. this should be applied to a node already in layout, 
 * probably the top of a grid layout.
 */ 
.toolbar-container {
  position: relative;
  font-size: $font-size;

  * { box-sizing: border-box;}

  /**
  * this node handles scrolling. we're also using it for padding, but that 
  * could be moved.
  */
  .toolbar-scroller {

    position: absolute;
    top: 0;
    left: 0;

    padding: 1em .5em; // FIXME: dymanic? (...)

    width: 100%;
    min-width: 100%;
    max-width: 100%;

    z-index: 3;
    overflow-x: scroll;

    // hide scrollbars
    // FIXME: util class

    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar { 
      display: none;
    }

  }

  /**
  * the toolbar itself
  */
  .toolbar {

    min-width: 120%;

    // FIXME: util class?
    display: flex;
    flex-direction: row;
    gap: .5em;

    /*
    display: grid;
    grid-template-columns: repeat(10, 32px);
    */

    #color-menu {
      display: grid;
      grid-template-columns: repeat(7, 32px);
    }

    /*
    &:focus-within {
      height: 100vh; // ??
    }
    */

    position: relative;

  }

  .menu {

    display: flex;
    flex-direction: column;
    display: none;
    position: fixed;
    border: 1px solid $border-color;
    border-radius: 3px;
    // padding: .5em;
    margin-top: .5em;
    background: $background-color;  
    box-shadow: $box-shadow;
    z-index: 20;

    button {
      white-space: nowrap;
      font: inherit;
      background: $background-color;  
      border: 0;
      width: 100%;
      text-align: left;
      font: inherit;
      padding: .4em 1em;
      margin: 3px 0;

      &:hover {
        background: $background-hover;
      }

    }

  }

  /** 
  * menu item not in a group needs relative so the menu can align.
  * menu item in a group should unset/reset.
  */
  .menu-item {
    position: relative;
  }

  .submenu-item {

    display: flex;
    flex-direction: row;

    /*
    .menu {
      margin-top: 0;
      margin-left: calc(100% + .5em);
    }
    */

  }

  .menu-item:focus-within, .submenu-item:focus-within, .menu-item.visible, .submenu-item.visible {
    & > .menu {
      display: flex;
    }
  }

  .menu-item > button, .group > button, .toolbar > button, button[data-icon] {
    
    background: transparent;
    border: 1px solid $border-color;
    width: $button-width;
    height: $button-width;
    font: inherit;
    border-radius: $border-radius;

    ///
    
    &::before {
      content: '';
      display: block;
      position: relative;
      background: currentColor;
      width: 20px;
      height: 20px;
      mask-position: center;
      -webkit-mask-position: center;
      mask-repeat: no-repeat;
      -webkit-mask-repeat: no-repeat;
      mask-image: var(--icon);
      -webkit-mask-image: var(--icon);
      mask-size: 16px 16px;
      -webkit-mask-size: 16px 16px;
    }

    /// 

    transition: background-color .1s ease;
    &:hover {
      background: $background-hover;
    }

    &.dropdown {
      width: $dropdown-button-width;
    }

    &.dropdown + .menu {
      left: 0px;
      &.right-align {
        left: 100%;
        transform: translateX(-100%);
      }
    }

  }

  .menu.right-align {
    left: 100%;
    transform: translateX(-100%);
  }

  .menu.right-align-submenu {
    left: calc(-100% - 1em);
    transform: translateX(-100%);
  }

  button.dropdown {
    position: relative;

    &::before {
      display: none;
    }

    &::after {
      box-sizing: content-box;
      content: '';
      position: absolute;
      width: 0px;
      height: 0px;
      border: 5px solid transparent;
      border-top-color: currentColor;
      top: 18px; // FIXME: specify in ems
      left: 50%;
      transform: translate(-50%, -50%);

    }
  }

  div.split {

    width: $button-width;
    height: $button-width;
    max-height: $button-width;
    overflow: hidden;

    display: flex;
    flex-direction: column;


    & > button {
      height: 50%;
      border: 1px solid $border-color;
      background: $background-color;
      transition: background-color .1s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      font: inherit;
      font-size: $split-font-size;

      &:hover {
        background: $background-hover;
      }

      &:first-child {
        border-top-left-radius: $border-radius;
        border-top-right-radius: $border-radius;
        border-bottom-width: 0;
      }

      &:last-child {
        border-bottom-left-radius: $border-radius;
        border-bottom-right-radius: $border-radius;

      }

    }

  }

  .group {

    // unset so children position relative to the group
    .menu-item {
      position: unset;
    }
    
    & > input {
      border: 1px solid $border-color;
      height: $button-width;
      font: inherit;
      border-radius: $border-radius;
      padding: 0 .5em;
    }

    display: flex;
    flex-direction: row;
    position: relative;

    & > button, & .menu-item > button, & > input {
      border-left-width: 0;
      border-radius: 0;
    }

    & > button:first-child, & .menu-item:first-child > button, & input:first-child {
      border-left-width: 1px;
      border-top-left-radius: $border-radius;
      border-bottom-left-radius: $border-radius;
    }

    & > button:last-child, & .menu-item:last-child > button {
      border-top-right-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }

  }

  .separator {
    height: 1px;
    background: $border-color;
    margin: 2px 0;
  }

  // --- dev ---

  .thinner {
    width: 6em;
  }

  #font-scale-input {
    width: 3.5em;
  }

  // --- icons -----------------------------------------------------------------

  [data-icon=file-menu]{ --icon: var(--treb-icon-file-menu); }
  [data-command=justify-left] { --icon: var(--treb-icon-text-align-left); }
  [data-command=justify-right] { --icon: var(--treb-icon-text-align-right); }
  [data-command=justify-center] { --icon: var(--treb-icon-text-align-center); }
  [data-command=align-top] { --icon: var(--treb-icon-text-align-top); }
  [data-command=align-middle] { --icon: var(--treb-icon-text-align-middle); }
  [data-command=align-bottom] { --icon: var(--treb-icon-text-align-bottom); }
  [data-command=merge-cells] { --icon: var(--treb-icon-merge-cells); }
  [data-command=unmerge-cells] { --icon: var(--treb-icon-unmerge-cells); }

  // ...

  [data-command=fill-color] { --icon: var(--treb-icon-fill-color); }
  [data-command=text-color] { --icon: var(--treb-icon-text-color); }

  // ...
  
  [data-icon=layout] { --icon: var(--treb-icon-layout); }
  [data-command=freeze] { --icon: var(--treb-icon-freeze); }

  [data-command=insert-column-chart] { --icon: var(--treb-icon-column-chart); }
  [data-command=insert-donut-chart] { --icon: var(--treb-icon-donut-chart); }
  [data-command=insert-bar-chart] { --icon: var(--treb-icon-bar-chart); }
  [data-command=insert-line-chart] { --icon: var(--treb-icon-line-chart); }
  [data-command=insert-image] { --icon: var(--treb-icon-image); }

  [data-command=border-bottom] { --icon: var(--treb-icon-border-bottom); }
  [data-command=border-left] { --icon: var(--treb-icon-border-left); }
  [data-command=border-right] { --icon: var(--treb-icon-border-right); }
  [data-command=border-top] { --icon: var(--treb-icon-border-top); }
  [data-command=border-outside] { --icon: var(--treb-icon-border-outer); }
  [data-command=border-all] { --icon: var(--treb-icon-border-all); }
  [data-command=border-none] { --icon: var(--treb-icon-border-none); }
  [data-command=border-double-bottom] { --icon: var(--treb-icon-border-double-bottom); }
  [data-icon=palette] { --icon: var(--treb-icon-palette); } 

}

