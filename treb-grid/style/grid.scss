
@import 'z-index';
@import 'font-stack';
@import 'defaults';
@import 'mouse-mask';
@import 'note';
@import 'tooltip';
@import 'autocomplete';
@import 'formula-bar';
@import 'tab-bar';
@import 'in-cell-editor';
@import 'legacy-layout';
@import 'grid-layout';

@import 'theme-container';
@import 'theme-defaults';

/*
 * NOTE: grid layout uses explicit properties (grid-start-row, &c)
 * to preclude less from turning compound properties (1/2) into division
 *
 * preclude? you mean prevent? (...)
 */

/** container and style root */
.treb-main {

  position: relative;
  display: flex;
  flex-direction: column;
  line-height: normal;

  * {
    box-sizing: border-box;
  }

  .treb-grid {

    flex-grow: 1;
    order: 2;
    position: relative;
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
    -webkit-tap-highlight-color: transparent;
    outline: none;

    &.safari {

      &::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 7px;
        height: 7px;
      }
      &::-webkit-scrollbar-thumb {
        border-radius: 4px;
        background-color: rgba(0,0,0,.25);
        -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
      }

    }

    canvas {
      border: 0;
      margin: 0;
      padding: 0;
      background: transparent;
    }

    .nub-select {
      cursor: crosshair;
    }

    .mock-selection-node {
      background: red;
      position: fixed;
      left: -100px;
      top: -100px;
    }

    /** covers for canvas nodes to intercept events */
    .tile-cover {
      background: transparent;
      position: relative;
      z-index: $z-index-tile-cover;

      /** specific layout for column header cover */
      &.column-header-cover {

        /** style is attached when mousing over a column boundary */
        &.resize {
          cursor: col-resize;
        }
        z-index: $z-index-header-tile-cover;
      }

      /** specific layout for row header cover */
      &.row-header-cover {

        /** style is attached when mousing over a row boundary */
        &.resize {
          cursor: row-resize;
        }
        z-index: $z-index-header-tile-cover;
      }

    }

    .annotation-container {
      position: absolute;
      top: 0px;
      left: 0px;

      .annotation {
        position: absolute;
        overflow: hidden;
        pointer-events: auto;
        background: rgba(255, 255, 255, .5);
        border: 1px solid #999;
        z-index: 1;

        &::before {
          content: '';
          position: absolute;
          background: transparent;
          top: 0px;
          left: 0px;
          width: 100%;
          height: 13px;
          cursor: move;
          z-index: 999;
        }

        &::after {
          content: '';
          position: absolute;
          background: transparent;
          bottom: 0px;
          right: 0px;
          width: 13px;
          height: 13px;
          cursor: nw-resize;
          z-index: 999;
          box-sizing: border-box;
          border: 7px solid transparent;
          // transition: border-color .5s;
        }

        &:focus, &.retain-focus {
          outline: 2px solid lightblue;
        }

      }

      z-index: $z-index-annotations;
      pointer-events: none;
    }

    /** selection stacks over the grid but under the cover */
    .grid-selection {
      background: transparent;
      position: absolute;
      z-index: $z-index-grid-selection;
      -moz-transform: scale(1); // firefox anti-blur
    }

    /** separate selection node for frozen rows/columns (needs different stacking) */
    .frozen-selection {
      
      background: transparent;
      position: absolute;
      z-index: $z-index-frozen-selection;
      overflow: hidden; // needed for IE11 (put in legacy?)
      -moz-transform: scale(1); // firefox anti-blur
      pointer-events: none;

      &.frozen-selection-rows {
        border-bottom: 1px solid transparent;
      }

      &.frozen-selection-columns {
        border-right: 1px solid transparent;
      }

    }
    
    /**
     * corner node to cover headers as they scroll across/down. this is now
     * used for freeze panes; row/column headers are rendered in the corner
     * and in the case of both frozen rows and columns, the fixed bit is
     * rendered to the corner.
     */
    .corner {

      top: 0px;
      left: 0px;
      z-index: $z-index-corner;

      canvas {
        position: absolute;
        top: 0px;
        left: 0px;
        pointer-events: none;
      }

    }

    /** contains row header tiles */
    .left-header {
      left: 0px;
      z-index: $z-index-headers;
      pointer-events: none;
    }

    /** contains column header tiles */
    .top-header {
      top: 0px;
      z-index: $z-index-headers;
      pointer-events: none;
    }

    /** contains main grid tiles */
    .contents {
      height: 2000px;
      width: 2000px;
    }

  }

}

