/*
 * This file is part of TREB.
 *
 * TREB is free software: you can redistribute it and/or modify it under the 
 * terms of the GNU General Public License as published by the Free Software 
 * Foundation, either version 3 of the License, or (at your option) any 
 * later version.
 *
 * TREB is distributed in the hope that it will be useful, but WITHOUT ANY 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with TREB. If not, see <https://www.gnu.org/licenses/>. 
 *
 * Copyright 2022 trebco, llc. 
 * info@treb.app
 * 
 */

@import 'z-index.scss';
@import 'font-stack.scss';
@import 'defaults.scss';
@import 'mouse-mask.scss';
@import 'note.scss';
@import 'table.scss';
@import 'tooltip.scss';
@import 'dropdown-select.scss';
@import 'autocomplete.scss';
@import 'formula-bar.scss';
@import 'tab-bar.scss';
@import 'in-cell-editor.scss';
// @import 'overlay-editor.scss';
@import 'overlay-editor-2.scss';

/*
@import 'legacy-layout.scss';
@import 'grid-layout.scss';
*/

@import 'theme-container.scss';
@import 'theme-defaults.scss';


/*
 * NOTE: grid layout uses explicit properties (grid-start-row, &c)
 * to preclude less from turning compound properties (1/2) into division
 *
 * preclude? you mean prevent? (...)
 */

/** container and style root */
.treb-main {

  // --treb-grid-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);

  position: relative;
  display: flex;
  flex-direction: column;
  line-height: normal;
  text-align: left;

  * {
    box-sizing: border-box;
  }

  .treb-layout-master {
    flex-grow: 1;
    order: 2;
    position: relative;
    -webkit-overflow-scrolling: touch;
    -webkit-tap-highlight-color: transparent;
    overflow: hidden;
    display: flex;
    position: relative;

    box-shadow: var(--treb-grid-shadow, 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1));
  

  }

  .treb-grid {

    flex-grow: 1;
    order: 2;
    position: relative;
    overflow: scroll;
    -webkit-overflow-scrolling: touch;
    -webkit-tap-highlight-color: transparent;
    outline: none;

    &.safari {

      &::-webkit-scrollbar {
        -webkit-appearance: none;
        width: 7px;
        height: 7px;
      }
      &::-webkit-scrollbar-thumb {
        border-radius: 4px;
        background-color: rgba(0,0,0,.25);
        -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
      }

    }

    canvas {
      border: 0;
      margin: 0;
      padding: 0;
      background: transparent;
    }

    .nub-select {
      cursor: crosshair;
    }

    .link-pointer {
      cursor: pointer;
    }

    .mock-selection-node {
      background: red;
      position: fixed;
      left: -100px;
      top: -100px;
    }

    /** covers for canvas nodes to intercept events */
    .tile-cover {
      background: transparent;
      position: relative;
      z-index: $z-index-tile-cover;

      /** specific layout for column header cover */
      &.column-header-cover {

        /** style is attached when mousing over a column boundary */
        &.resize {
          cursor: col-resize;
        }
        z-index: $z-index-header-tile-cover;
      }

      /** specific layout for row header cover */
      &.row-header-cover {

        /** style is attached when mousing over a row boundary */
        &.resize {
          cursor: row-resize;
        }
        z-index: $z-index-header-tile-cover;
      }

    }

    .annotation-container, .frozen-annotation-container {
      position: absolute;
      top: 0px;
      left: 0px;

      .annotation {
        position: absolute;
        overflow: hidden;
        pointer-events: auto;
        background: rgba(255, 255, 255, .5);
        border: 1px solid #999;
        z-index: 1;
        
        .annotation-content {
          position: absolute;
          top: 0px;
          left: 0px;
          height: 100%;
          width: 100%;
          font-family: inherit;
          font-size: inherit;
          z-index: 1;
        }

        .annotation-move-target {
          position: absolute;
          z-index: 2;
          cursor: move;
          top: 0px;
          left: 0px;
          height: 10%;
          min-height: 14px;
          width: 100%;
        }

        .annotation-resize-target {
          position: absolute;
          z-index: 3;
          cursor: nwse-resize;
          bottom: 0px;
          right: 0px;
          width: 10%;
          height: 10%;
          min-height: 14px;
          min-width: 14px;
        }

        &:focus, &.retain-focus, &.clone-focus {
          // outline: 2px solid lightblue;
          // box-shadow: 0 0 0 3px #0ea5e954;
          box-shadow: 0px 0px 0px 3px rgba(14, 165, 233, 0.33); // IE can't handle RGBA hex
        }

      }

      /** what is this? */
      .move-buffer {
        position: absolute;
        border: 1px solid red;
        height: 10%;
        top: 0px;
        width: 100%;
        left: 0px;
        cursor: move;
      }

      z-index: $z-index-annotations;
      pointer-events: none;
    }

    /** selection stacks over the grid but under the cover */
    .grid-selection {
      background: transparent;
      position: absolute;
      z-index: $z-index-grid-selection;
      -moz-transform: scale(1); /* firefox anti-blur */
    }

    /** separate selection node for frozen rows/columns (needs different stacking) */
    .frozen-selection {
      
      /* background: transparent; */
      transition: background .33s;

      position: absolute;
      z-index: $z-index-frozen-selection;
      overflow: hidden; /* needed for IE11 (put in legacy?) */
      -moz-transform: scale(1); /* firefox anti-blur */
      pointer-events: none;

      &.frozen-selection-rows {
        border-bottom: 1px solid transparent;
      }

      &.frozen-selection-columns {
        border-right: 1px solid transparent;
      }

    }
    
    /** separate annotation node for frozen row/column/corner */
    .frozen-annotation-container {

      position: absolute;
      top: 0px;
      left: 0px;
      overflow: hidden;
      width: 100%;
      height: 100%;

    }

    /**
     * corner node to cover headers as they scroll across/down. this is now
     * used for freeze panes; row/column headers are rendered in the corner
     * and in the case of both frozen rows and columns, the fixed bit is
     * rendered to the corner.
     */
    .corner {

      top: 0px;
      left: 0px;
      z-index: $z-index-corner;

      canvas {
        position: absolute;
        top: 0px;
        left: 0px;
        pointer-events: none;
      }

    }

    /** contains row header tiles */
    .left-header {
      left: 0px;
      z-index: $z-index-headers;
      pointer-events: none;
    }

    /** contains column header tiles */
    .top-header {
      top: 0px;
      z-index: $z-index-headers;
      pointer-events: none;
    }

    /** contains main grid tiles */
    .contents {
      height: 2000px;
      width: 2000px;
    }

  }

}

